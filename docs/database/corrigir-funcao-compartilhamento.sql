-- ============================================
-- üîß CORRIGIR FUN√á√ÉO DE ACESSO COMPARTILHADO
-- ============================================

-- Remover fun√ß√£o antiga
DROP FUNCTION IF EXISTS tem_acesso_compartilhado(UUID) CASCADE;

-- Criar fun√ß√£o CORRIGIDA
CREATE OR REPLACE FUNCTION tem_acesso_compartilhado(usuario_dono_id UUID)
RETURNS BOOLEAN AS $$
DECLARE
  usuario_atual UUID;
BEGIN
  -- Obter ID do usu√°rio atual
  usuario_atual := auth.uid();
  
  -- Se n√£o h√° usu√°rio logado, negar acesso
  IF usuario_atual IS NULL THEN
    RETURN false;
  END IF;
  
  -- Verificar se:
  -- 1. √â o pr√≥prio dono dos dados OU
  -- 2. Tem compartilhamento ativo onde √© o dono e est√° vendo dados de outro OU
  -- 3. Tem compartilhamento ativo onde √© o compartilhado e est√° vendo dados do dono
  RETURN (
    -- √â o pr√≥prio dono
    usuario_atual = usuario_dono_id 
    OR
    -- Tem compartilhamento ATIVO onde ele √© o dono e est√° vendo dados do compartilhado
    EXISTS (
      SELECT 1 FROM compartilhamentos
      WHERE dono_id = usuario_atual
      AND usuario_compartilhado_id = usuario_dono_id
      AND status = 'ativo'
    )
    OR
    -- Tem compartilhamento ATIVO onde ele √© o compartilhado e est√° vendo dados do dono
    EXISTS (
      SELECT 1 FROM compartilhamentos
      WHERE dono_id = usuario_dono_id
      AND usuario_compartilhado_id = usuario_atual
      AND status = 'ativo'
    )
  );
END;
$$ LANGUAGE plpgsql SECURITY DEFINER STABLE;

-- ============================================
-- RECRIAR POL√çTICAS RLS COM A FUN√á√ÉO CORRIGIDA
-- ============================================

-- PRODUTOS
DROP POLICY IF EXISTS "Usu√°rios podem ver produtos pr√≥prios ou compartilhados" ON produtos;
CREATE POLICY "Usu√°rios podem ver produtos pr√≥prios ou compartilhados"
ON produtos FOR SELECT TO authenticated
USING (tem_acesso_compartilhado(usuario_id));

DROP POLICY IF EXISTS "Usu√°rios podem inserir produtos pr√≥prios ou compartilhados" ON produtos;
CREATE POLICY "Usu√°rios podem inserir produtos pr√≥prios ou compartilhados"
ON produtos FOR INSERT TO authenticated
WITH CHECK (tem_acesso_compartilhado(usuario_id));

DROP POLICY IF EXISTS "Usu√°rios podem atualizar produtos pr√≥prios ou compartilhados" ON produtos;
CREATE POLICY "Usu√°rios podem atualizar produtos pr√≥prios ou compartilhados"
ON produtos FOR UPDATE TO authenticated
USING (tem_acesso_compartilhado(usuario_id));

DROP POLICY IF EXISTS "Usu√°rios podem deletar produtos pr√≥prios ou compartilhados" ON produtos;
CREATE POLICY "Usu√°rios podem deletar produtos pr√≥prios ou compartilhados"
ON produtos FOR DELETE TO authenticated
USING (tem_acesso_compartilhado(usuario_id));

-- LOTES
DROP POLICY IF EXISTS "Usu√°rios podem ver lotes pr√≥prios ou compartilhados" ON lotes;
CREATE POLICY "Usu√°rios podem ver lotes pr√≥prios ou compartilhados"
ON lotes FOR SELECT TO authenticated
USING (tem_acesso_compartilhado(usuario_id));

DROP POLICY IF EXISTS "Usu√°rios podem inserir lotes pr√≥prios ou compartilhados" ON lotes;
CREATE POLICY "Usu√°rios podem inserir lotes pr√≥prios ou compartilhados"
ON lotes FOR INSERT TO authenticated
WITH CHECK (tem_acesso_compartilhado(usuario_id));

DROP POLICY IF EXISTS "Usu√°rios podem atualizar lotes pr√≥prios ou compartilhados" ON lotes;
CREATE POLICY "Usu√°rios podem atualizar lotes pr√≥prios ou compartilhados"
ON lotes FOR UPDATE TO authenticated
USING (tem_acesso_compartilhado(usuario_id));

DROP POLICY IF EXISTS "Usu√°rios podem deletar lotes pr√≥prios ou compartilhados" ON lotes;
CREATE POLICY "Usu√°rios podem deletar lotes pr√≥prios ou compartilhados"
ON lotes FOR DELETE TO authenticated
USING (tem_acesso_compartilhado(usuario_id));

-- MOVIMENTA√á√ïES
DROP POLICY IF EXISTS "Usu√°rios podem ver movimenta√ß√µes pr√≥prias ou compartilhadas" ON movimentacoes;
CREATE POLICY "Usu√°rios podem ver movimenta√ß√µes pr√≥prias ou compartilhadas"
ON movimentacoes FOR SELECT TO authenticated
USING (tem_acesso_compartilhado(usuario_id));

DROP POLICY IF EXISTS "Usu√°rios podem inserir movimenta√ß√µes pr√≥prias ou compartilhadas" ON movimentacoes;
CREATE POLICY "Usu√°rios podem inserir movimenta√ß√µes pr√≥prias ou compartilhadas"
ON movimentacoes FOR INSERT TO authenticated
WITH CHECK (tem_acesso_compartilhado(usuario_id));

DROP POLICY IF EXISTS "Usu√°rios podem atualizar movimenta√ß√µes pr√≥prias ou compartilhadas" ON movimentacoes;
CREATE POLICY "Usu√°rios podem atualizar movimenta√ß√µes pr√≥prias ou compartilhadas"
ON movimentacoes FOR UPDATE TO authenticated
USING (tem_acesso_compartilhado(usuario_id));

DROP POLICY IF EXISTS "Usu√°rios podem deletar movimenta√ß√µes pr√≥prias ou compartilhadas" ON movimentacoes;
CREATE POLICY "Usu√°rios podem deletar movimenta√ß√µes pr√≥prias ou compartilhadas"
ON movimentacoes FOR DELETE TO authenticated
USING (tem_acesso_compartilhado(usuario_id));

-- ============================================
-- ‚úÖ CONCLU√çDO!
-- ============================================

SELECT 'Fun√ß√£o corrigida e pol√≠ticas recriadas com sucesso!' as mensagem;

