-- ============================================
-- ü§ù INSTALA√á√ÉO COMPLETA DO SISTEMA DE COMPARTILHAMENTO
-- ============================================
-- Este script faz TUDO de uma vez:
-- 1. Remove instala√ß√£o antiga (se existir)
-- 2. Cria tabela, fun√ß√µes e pol√≠ticas RLS
-- 3. Configura permiss√µes granulares
-- 4. Permite buscar outros usu√°rios

-- ============================================
-- PASSO 1: LIMPAR INSTALA√á√ÉO ANTIGA
-- ============================================

-- Remover pol√≠ticas de produtos
DROP POLICY IF EXISTS "Usu√°rios podem ver produtos pr√≥prios ou compartilhados" ON produtos;
DROP POLICY IF EXISTS "Usu√°rios podem inserir produtos pr√≥prios ou compartilhados" ON produtos;
DROP POLICY IF EXISTS "Usu√°rios podem atualizar produtos pr√≥prios ou compartilhados" ON produtos;
DROP POLICY IF EXISTS "Usu√°rios podem deletar produtos pr√≥prios ou compartilhados" ON produtos;

-- Remover pol√≠ticas de lotes
DROP POLICY IF EXISTS "Usu√°rios podem ver lotes pr√≥prios ou compartilhados" ON lotes;
DROP POLICY IF EXISTS "Usu√°rios podem inserir lotes pr√≥prios ou compartilhados" ON lotes;
DROP POLICY IF EXISTS "Usu√°rios podem atualizar lotes pr√≥prios ou compartilhados" ON lotes;
DROP POLICY IF EXISTS "Usu√°rios podem deletar lotes pr√≥prios ou compartilhados" ON lotes;

-- Remover pol√≠ticas de movimenta√ß√µes
DROP POLICY IF EXISTS "Usu√°rios podem ver movimenta√ß√µes pr√≥prias ou compartilhadas" ON movimentacoes;
DROP POLICY IF EXISTS "Usu√°rios podem inserir movimenta√ß√µes pr√≥prias ou compartilhadas" ON movimentacoes;
DROP POLICY IF EXISTS "Usu√°rios podem atualizar movimenta√ß√µes pr√≥prias ou compartilhadas" ON movimentacoes;
DROP POLICY IF EXISTS "Usu√°rios podem deletar movimenta√ß√µes pr√≥prias ou compartilhadas" ON movimentacoes;

-- Remover pol√≠ticas de compartilhamentos
DROP POLICY IF EXISTS "Usu√°rios podem ver seus compartilhamentos" ON compartilhamentos;
DROP POLICY IF EXISTS "Usu√°rios podem criar compartilhamentos" ON compartilhamentos;
DROP POLICY IF EXISTS "Usu√°rios podem atualizar seus compartilhamentos" ON compartilhamentos;
DROP POLICY IF EXISTS "Usu√°rios podem deletar seus compartilhamentos" ON compartilhamentos;

-- Remover fun√ß√µes
DROP FUNCTION IF EXISTS obter_usuarios_conectados(UUID) CASCADE;
DROP FUNCTION IF EXISTS tem_acesso_compartilhado(UUID) CASCADE;

-- Remover √≠ndices
DROP INDEX IF EXISTS idx_compartilhamentos_dono;
DROP INDEX IF EXISTS idx_compartilhamentos_usuario;

-- Remover tabela
DROP TABLE IF EXISTS compartilhamentos CASCADE;

-- ============================================
-- PASSO 2: CRIAR TABELA DE COMPARTILHAMENTOS
-- ============================================

CREATE TABLE compartilhamentos (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  dono_id UUID NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,
  usuario_compartilhado_id UUID NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,
  criado_em TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  atualizado_em TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  status TEXT DEFAULT 'ativo' CHECK (status IN ('ativo', 'inativo')),
  permissoes TEXT[] DEFAULT ARRAY['produtos', 'entradas', 'saidas', 'relatorios', 'financeiro', 'pdv'],
  
  UNIQUE(dono_id, usuario_compartilhado_id)
);

-- √çndices para performance
CREATE INDEX idx_compartilhamentos_dono ON compartilhamentos(dono_id) WHERE status = 'ativo';
CREATE INDEX idx_compartilhamentos_usuario ON compartilhamentos(usuario_compartilhado_id) WHERE status = 'ativo';

-- Habilitar RLS
ALTER TABLE compartilhamentos ENABLE ROW LEVEL SECURITY;

-- ============================================
-- PASSO 3: CRIAR FUN√á√ïES
-- ============================================

CREATE OR REPLACE FUNCTION tem_acesso_compartilhado(usuario_dono_id UUID)
RETURNS BOOLEAN AS $$
BEGIN
  RETURN (
    auth.uid() = usuario_dono_id OR
    EXISTS (
      SELECT 1 FROM compartilhamentos
      WHERE dono_id = usuario_dono_id
      AND usuario_compartilhado_id = auth.uid()
      AND status = 'ativo'
    ) OR
    EXISTS (
      SELECT 1 FROM compartilhamentos
      WHERE usuario_compartilhado_id = usuario_dono_id
      AND dono_id = auth.uid()
      AND status = 'ativo'
    )
  );
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- ============================================
-- PASSO 4: POL√çTICAS RLS - COMPARTILHAMENTOS
-- ============================================

CREATE POLICY "Usu√°rios podem ver seus compartilhamentos"
ON compartilhamentos FOR SELECT TO authenticated
USING (auth.uid() = dono_id OR auth.uid() = usuario_compartilhado_id);

CREATE POLICY "Usu√°rios podem criar compartilhamentos"
ON compartilhamentos FOR INSERT TO authenticated
WITH CHECK (auth.uid() = dono_id);

CREATE POLICY "Usu√°rios podem atualizar seus compartilhamentos"
ON compartilhamentos FOR UPDATE TO authenticated
USING (auth.uid() = dono_id);

CREATE POLICY "Usu√°rios podem deletar seus compartilhamentos"
ON compartilhamentos FOR DELETE TO authenticated
USING (auth.uid() = dono_id);

-- ============================================
-- PASSO 5: ATUALIZAR RLS - PRODUTOS
-- ============================================

CREATE POLICY "Usu√°rios podem ver produtos pr√≥prios ou compartilhados"
ON produtos FOR SELECT TO authenticated
USING (tem_acesso_compartilhado(usuario_id));

CREATE POLICY "Usu√°rios podem inserir produtos pr√≥prios ou compartilhados"
ON produtos FOR INSERT TO authenticated
WITH CHECK (tem_acesso_compartilhado(usuario_id));

CREATE POLICY "Usu√°rios podem atualizar produtos pr√≥prios ou compartilhados"
ON produtos FOR UPDATE TO authenticated
USING (tem_acesso_compartilhado(usuario_id));

CREATE POLICY "Usu√°rios podem deletar produtos pr√≥prios ou compartilhados"
ON produtos FOR DELETE TO authenticated
USING (tem_acesso_compartilhado(usuario_id));

-- ============================================
-- PASSO 6: ATUALIZAR RLS - LOTES
-- ============================================

CREATE POLICY "Usu√°rios podem ver lotes pr√≥prios ou compartilhados"
ON lotes FOR SELECT TO authenticated
USING (tem_acesso_compartilhado(usuario_id));

CREATE POLICY "Usu√°rios podem inserir lotes pr√≥prios ou compartilhados"
ON lotes FOR INSERT TO authenticated
WITH CHECK (tem_acesso_compartilhado(usuario_id));

CREATE POLICY "Usu√°rios podem atualizar lotes pr√≥prios ou compartilhados"
ON lotes FOR UPDATE TO authenticated
USING (tem_acesso_compartilhado(usuario_id));

CREATE POLICY "Usu√°rios podem deletar lotes pr√≥prios ou compartilhados"
ON lotes FOR DELETE TO authenticated
USING (tem_acesso_compartilhado(usuario_id));

-- ============================================
-- PASSO 7: ATUALIZAR RLS - MOVIMENTA√á√ïES
-- ============================================

CREATE POLICY "Usu√°rios podem ver movimenta√ß√µes pr√≥prias ou compartilhadas"
ON movimentacoes FOR SELECT TO authenticated
USING (tem_acesso_compartilhado(usuario_id));

CREATE POLICY "Usu√°rios podem inserir movimenta√ß√µes pr√≥prias ou compartilhadas"
ON movimentacoes FOR INSERT TO authenticated
WITH CHECK (tem_acesso_compartilhado(usuario_id));

CREATE POLICY "Usu√°rios podem atualizar movimenta√ß√µes pr√≥prias ou compartilhadas"
ON movimentacoes FOR UPDATE TO authenticated
USING (tem_acesso_compartilhado(usuario_id));

CREATE POLICY "Usu√°rios podem deletar movimenta√ß√µes pr√≥prias ou compartilhadas"
ON movimentacoes FOR DELETE TO authenticated
USING (tem_acesso_compartilhado(usuario_id));

-- ============================================
-- PASSO 8: PERMITIR BUSCAR OUTROS USU√ÅRIOS
-- ============================================

DROP POLICY IF EXISTS "Usu√°rios podem buscar outros usu√°rios para compartilhar" ON perfis;
CREATE POLICY "Usu√°rios podem buscar outros usu√°rios para compartilhar"
ON perfis FOR SELECT TO authenticated
USING (true);

-- ============================================
-- ‚úÖ CONCLU√çDO!
-- ============================================

SELECT 'Sistema de compartilhamento instalado com sucesso!' as mensagem;

